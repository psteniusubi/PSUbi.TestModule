# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  tags:
   include:
     - 'release/*'

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  displayName: 'Checkout GIT'
  clean: true

- task: DotNetCoreCLI@2
  displayName: 'Restore .NET'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: '479af406-8051-4a92-8565-212e80f6cb9b/fc3ef3fd-5bff-43b1-b1fe-33124513434d'

- task: DotNetCoreCLI@2
  displayName: 'Build .NET'
  inputs:
    command: 'build'
    arguments: '--no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Pack .NET'
  inputs:
    command: 'pack'
    arguments: '--no-build'
    packagesToPack: 'cs/PSUbi.TestModule/*.csproj'
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  displayName: 'Push .NET'
  inputs:
    command: 'push'    
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '479af406-8051-4a92-8565-212e80f6cb9b/fc3ef3fd-5bff-43b1-b1fe-33124513434d'

- task: DotNetCoreCLI@2
  displayName: 'Package PWSH'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'cs/PSUbi.TestModule/*.csproj'
    arguments: '--framework net8.0 -o pwsh/PSUbi.TestModule/lib/net8.0'
    zipAfterPublish: false
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: 'Package PWSH'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'cs/PSUbi.TestModule/*.csproj'
    arguments: '--framework net481 -o pwsh/PSUbi.TestModule/lib/net481'
    zipAfterPublish: false
    modifyOutputPath: false

- task: PowerShell@2
  displayName: 'Publish PWSH'
  inputs:
    targetType: 'inline'
    script: |
      Register-PSResourceRepository -Name "Ubisecure" -Uri "https://pkgs.dev.azure.com/Ubisecure/Research/_packaging/Modules/nuget/v3/index.json"
      Publish-PSResource -Repository "Ubisecure" -Path "pwsh/PSUbi.TestModule" -ApiKey "$env:SYSTEM_ACCESSTOKEN" -Verbose
    pwsh: true
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
